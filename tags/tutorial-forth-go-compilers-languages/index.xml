<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>tutorial, forth, go, compilers, languages on João G. Sousa</title><link>//www.jgsousa.com/tags/tutorial-forth-go-compilers-languages/</link><description>Recent content in tutorial, forth, go, compilers, languages on João G. Sousa</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Thu, 06 Jul 2023 22:50:00 +0100</lastBuildDate><atom:link href="//www.jgsousa.com/tags/tutorial-forth-go-compilers-languages/index.xml" rel="self" type="application/rss+xml"/><item><title>Go Forth and Prosper</title><link>//www.jgsousa.com/posts/go-forth-and-prosper/</link><pubDate>Thu, 06 Jul 2023 22:50:00 +0100</pubDate><guid>//www.jgsousa.com/posts/go-forth-and-prosper/</guid><description>TL;DR Split input on white space Numbers get added to a stack, words get executed Pre-define some words in the interpreter Write new words in Forth Background For last year&amp;rsquo;s Advent of Code, in one of those should-really-stop-overestimating-my-skills type of situations, I took on the challenge of using a different programming language every day. Needless to say, a day quickly took on a looser definition as the problems got progressively harder and the languages more esoteric.</description></item></channel></rss>